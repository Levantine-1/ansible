---
- name: Pull and run nginx-proxy container
  hosts: VMWareDockerHosts
  gather_facts: yes
  become: yes

  vars_files:
    - ../../../vault.yml

  tasks:

    # The docker module documentation mainly focuses on getting information on a specific container
    # and it was difficult to find a way to just get a list of running containers. In any case, since this
    # just listing, it should still be declarative
    - name: Get running container names
      ansible.builtin.command: 'docker ps --format "\{\{.Names\}\} --filter status=running"'
      register: running_containers_raw
      changed_when: false

    - name: Pull nginx-proxy image
      docker_image:
        name: jwilder/nginx-proxy
        source: pull
        tag: latest
      register: image_pull

    - name: Retrieve SplunkForwarder Token from HashiCorp Vault
      # NOTE: This token is created manually under splunk>settings>data inputs>HTTP Event Collector and stored in vault at path below
      set_fact:
        splunk_creds: "{{ lookup('hashi_vault', 'secret=kv/data/splunk/http_access_tokens/docker token={{ hashicorp_vault_token }} url={{ hashicorp.vault.address }}') }}"
      when: image_pull.changed

    - name: Run nginx-proxy container
      docker_container:
        name: nginx-proxy
        image: jwilder/nginx-proxy:latest
        ports:
          - "80:80"
        volumes:
          - "/var/run/docker.sock:/tmp/docker.sock:ro"
        detach: yes
        container_default_behavior: no_defaults
        log_driver: splunk
        log_options:
          splunk-token: "{{ splunk_creds.token }}"
          splunk-url: "http://{{ splunk.server.host }}:{{ splunk.forwarders.http_event_collector_port }}"
          splunk-insecureskipverify: "{{ splunk.forwarders.insecureskipverify }}"
          splunk-source: "nginx-proxy"
      when: image_pull.changed
      register: container_start

    - name: Restart nginx-proxy container if image was pulled
      docker_container:
        name: nginx-proxy
        state: restarted
      when: image_pull.changed and not container_start.changed
      register: container_restart

    - name: Restart running containers if nginx-proxy container was restarted
      docker_container:
        name: "{{ item }}"
        state: restarted
      loop: "{{ running_containers_raw.stdout_lines }}"
      when: container_restart.changed and item != 'nginx-proxy'
