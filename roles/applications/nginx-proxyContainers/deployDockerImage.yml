---
- name: Deploy Docker Image
  hosts: VMWareDockerHosts
  gather_facts: true
  become: true

  # vars:
    # variable container_name is defined as an extra var

  tasks:
    - name: Validate Supported Container
      debug:
        msg: "Checking to see if container is supported"
      failed_when: container_name == 'nginx-proxy' or container_name not in supported_containers

    - name: Copy docker image tarball from ansible host to remote host
      copy:
        src: "/tmp/{{ container_name }}_latest.tar"
        dest: "/tmp/{{ container_name }}_latest.tar"

    - name: Stop the old Docker container (if exists)
      docker_container:
        name: "{{ container_name }}"
        state: stopped
        timeout: 30
        container_default_behavior: no_defaults
      ignore_errors: yes

    - name: Extract image name and tag from tarball
      shell: "docker load --input /tmp/{{ container_name }}_latest.tar | awk '{print $3}'"
      register: loaded_image_name

    - name: Loaded docker image name
      debug:
        msg: "{{ loaded_image_name.stdout }}"

    - name: Load Docker Image from Tarball
      docker_image:
        name: "{{ loaded_image_name.stdout }}"
        load_path: "/tmp/{{ container_name }}_latest.tar"
        source: load

    - name: Run Docker Container
      docker_container:
        name: thisper
        image: "{{ loaded_image_name.stdout }}"
        env:
          VIRTUAL_HOST: "{{ supported_containers[container_name]['env_vars']['VIRTUAL_HOST'] }}"

    - name: Prune Docker
      command: docker system prune -af