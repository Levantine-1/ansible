---
- name: Download Docker Image
  hosts: localhost
  gather_facts: true
  become: true

  vars_files:
    - ../../../vault.yml
  vars:
    # variable container_name is defined as an extra var
    account_id: "{{ aws.account_id }}"
    default_region: "{{ aws.default_region }}"

  tasks:
    - name: Validate Supported Container
      debug:
        msg: "Checking to see if container is supported"
      failed_when: "container_name == 'nginx-proxy' or container_name not in hostvars[groups['VMWareDockerHosts'][0]]['supported_containers']"

    - name: Retrieve AWS Credentials from HashiCorp Vault
      # NOTE: The secret path is created in the main terraform repo when the user is created and key stored in vault at path below
      set_fact:
        aws_creds: "{{ lookup('hashi_vault', 'secret=kv/data/aws/iam_access_keys/terraform_{{ container_name }} token={{ hashicorp_vault_token }} url={{ hashicorp.vault.address }}') }}"

    - name: debug
      debug:
        msg: "{{ aws_creds }}"

    - name: Log in to AWS ECR
      shell: "aws ecr get-login-password --region {{ default_region }} | docker login --username AWS --password-stdin {{ account_id }}.dkr.ecr.{{ default_region }}.amazonaws.com"
      environment:
        AWS_ACCESS_KEY_ID: "{{ aws_creds.access_key }}"
        AWS_SECRET_ACCESS_KEY: "{{ aws_credentials.secret_key }}"

    - name: Get the latest Docker image from ECR
      shell: "aws ecr describe-images --repository-name {{ container_name }} --query 'sort_by(imageDetails, &imagePushedAt) | [-1].imageTags[0]' --output text --region {{ default_region }}"
      register: latest_image

    - name: Latest docker image
      debug:
        msg: "{{ latest_image.stdout }}"

    - name: Pull Docker Image from ECR
      shell: "docker pull {{ account_id }}.dkr.ecr.{{ default_region }}.amazonaws.com/{{ container_name }}:{{ latest_image.stdout }}"
      register: pulled_image

    - name: Docker Image Pulled
      debug:
        msg: "{{ pulled_image.stdout }}"

    - name: Save Docker Image to Tarball
      shell: "docker save {{ account_id }}.dkr.ecr.{{ default_region }}.amazonaws.com/{{ container_name }}:{{ latest_image.stdout }} -o /tmp/{{ container_name }}_latest.tar"

    - name: Set read permissions on the file
      file:
        path: "/tmp/{{ container_name }}_latest.tar"
        mode: "a+r"

    - name: Prune Docker
      command: docker system prune -af
