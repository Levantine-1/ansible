# https://docs.percona.com/percona-xtradb-cluster/8.0/apt.html#install-from-repository
---
- name: Install Percona XtraDB Cluster
  hosts: PerconaCluster
  gather_facts: yes
  become: yes

  vars:
    prerequisite_packages:
      - wget
      - gnupg2
      - lsb-release
      - curl
      - python3-pexpect

  vars_files:
    - ../../../vault.yml

  tasks:
#    - name: Update apt repository cache
#      ansible.builtin.apt:
#        update_cache: yes
#
#    - name: Install prerequisite packages
#      package:
#        name: "{{ prerequisite_packages }}"
#        state: present
#
#    - name: Download the repository package
#      ansible.builtin.get_url:
#        url: "https://repo.percona.com/apt/percona-release_latest.generic_all.deb"
#        dest: "/tmp/percona-release_latest.generic_all.deb"
#
#    - name: Install the package with dpkg
#      ansible.builtin.apt:
#        deb: "/tmp/percona-release_latest.generic_all.deb"
#
#    - name: Refresh the local cache to update the package information
#      ansible.builtin.apt:
#        update_cache: yes
#
#    - name: Enable the release repository for Percona XtraDB Cluster
#      ansible.builtin.shell: percona-release setup pxc80
#
#    - name: Retrieve MySQL Root user password from HashiCorp Vault
#      # NOTE: This password is created manually and stored in vault at path below. 24 characters generated by random.org
#      set_fact:
#        percona_creds: "{{ lookup('hashi_vault', 'secret=kv/data/percona_cluster/nodes/' + inventory_hostname.split('.')[0] + ' token=' + hashicorp_vault_token + ' url=' + hashicorp.vault.address) }}"
#
#    - name: Install the Percona XtraDB Cluster package
#      expect:
#        command: apt-get -y install percona-xtradb-cluster
#        responses:
#          'Enter root password:': '{{ percona_creds.root_password }}'
#          'Re-enter root password:': '{{ percona_creds.root_password }}'
#          'Select default authentication plugin': '1'
#          #   1. Use Strong Password Encryption (RECOMMENDED)  2. Use Legacy Authentication Method (Retain MySQL 5.x Compatibility)
#      become: yes
#      environment:
#        DEBIAN_FRONTEND: readline
#        # By default, the installer will use a dialog interface to get user input.
#        # This will force it to use readline instead so that the expect module can interact with it.
#      no_log: true
#      ignore_errors: yes # For some reason this will throw an error, but the installation is successful. So we'll verify it next step.
#
#    - name: Start the Percona XtraDB Cluster service
#      ansible.builtin.systemd:
#        name: mysql
#        state: started
#        enabled: yes
#
#    - name: Verify MySQL login
#      command: mysql -u root -e 'SELECT 1;'
#      environment:
#        MYSQL_PWD: "{{ percona_creds.root_password }}"
#      register: result
#      failed_when: "'ERROR' in result.stderr"
#      no_log: true
#
#    - name: Stop the Percona XtraDB Cluster service
#      ansible.builtin.systemd:
#        name: mysql
#        state: stopped

    - name: Configure mysqld.cnf
      template:
        src: templates/mysqld.cnf.j2
        dest: /etc/mysql/mysql.conf.d/mysqld.cnf
