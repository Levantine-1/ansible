# https://docs.percona.com/percona-xtradb-cluster/8.0/apt.html#install-from-repository
# NOTE: You will need to install the hashi_vault plugin for ansible to use the lookup plugin.
# ansible-galaxy collection install community.hashi_vault
---
- name: Configure Percona XtraDB Cluster (Wrapper)
  hosts: PerconaCluster
  gather_facts: yes
  become: yes

  vars:
    vault_addr: "{{ hashicorp.vault.address }}"
    vault_token: "{{ hashicorp_vault_token }}"
    vault_secret_path: "kv/data/percona_cluster/certificates"
    prerequisite_packages:
      - wget
      - gnupg2
      - lsb-release
      - curl
      - python3-pexpect
      - python3-mysqldb

  vars_files:
    - ../../../vault.yml

  tasks:
    - name: Update apt repository cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Required Packages
      package:
        name: "{{ prerequisite_packages }}"
        state: present

    - name: Check if Percona XtraDB Cluster is installed
      ansible.builtin.shell: dpkg-query -W -f='${Status}' percona-xtradb-cluster 2>/dev/null | grep "ok installed"
      register: percona_installed
      ignore_errors: yes
      changed_when: false

    - name: Install Percona XtraDB Cluster
      include_tasks: "configure_percona_xtradb_cluster.yml"
      when: percona_installed.rc == 1

    - name: Configure mysqld.cnf
      template:
        src: templates/mysqld.cnf.j2
        dest: /etc/mysql/mysql.conf.d/mysqld.cnf

    - name: Retrieve certificates from bootstrap node.
      include_tasks: "store_certificates.yml"
      when: bootstrap is defined and bootstrap == "yes" and percona_installed.rc == 1
      # I am assuming percona-xtradb-cluster is installed correctly on the bootstrap node if the "Install Percona XtraDB Cluster" task is executed.

    - name: Deploy certificates to other nodes.
      include_tasks: "deploy_certificates.yml"
      when: bootstrap is not defined or bootstrap == "no"

    - debug:
        msg: |
          NOTE: Due to the potential for data loss or split brain scenario, this playbook will not bootstrap the cluster nor startup the other nodes.
          The user will need to manually bootstrap the cluster and start the other nodes.
          To bootstrap the cluster, run the following command on the first node:
          "sudo service mysql bootstrap-pxc" or "sudo systemctl start mysql@bootstrap.service"
          Then once the cluster is bootstrapped, start the other nodes with the following command:
          "sudo service mysql start" or "sudo systemctl start mysql"
          Check the status of the cluster with the following command after logging into mysql:
          "show status like '%wsrep%';"
          

      # NOTE: Due to the potential for data loss or split brain scenario, this playbook will not bootstrap the cluster nor startup the other nodes.
      # The user will need to manually bootstrap the cluster and start the other nodes.
      # To bootstrap the cluster, run the following command on the first node:
      # "sudo service mysql bootstrap-pxc" or "sudo systemctl start mysql@bootstrap.service"
      # Then once the cluster is bootstrapped, start the other nodes with the following command:
      # "sudo service mysql start" or "sudo systemctl start mysql"
      # Check the status of the cluster with the following command after logging into mysql:
      # "show status like '%wsrep%';"