# https://docs.percona.com/percona-xtradb-cluster/8.0/load-balance-proxysql.html#manual-configuration
---
- name: Configure ProxySQL
  hosts: ProxySQL
  gather_facts: yes
  become: yes

  vars:
    required_packages:
      - percona-xtradb-cluster-client
      - proxysql2
      - python3-mysqldb
    proxysql:
      monitor_username: proxysql
      client_username: sbuser

  vars_files:
    - ../../../vault.yml

  tasks:
    - name: Download the repository package
      ansible.builtin.get_url:
        url: "https://repo.percona.com/apt/percona-release_latest.generic_all.deb"
        dest: "/tmp/percona-release_latest.generic_all.deb"

    - name: Install the package with dpkg
      ansible.builtin.apt:
        deb: "/tmp/percona-release_latest.generic_all.deb"

    - name: Update apt repository cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Enable the release repository for Percona XtraDB Cluster
      ansible.builtin.shell: percona-release setup pxc80

    - name: Install Required Packages
      package:
        name: "{{ required_packages }}"
        state: present

    - name: Retrieve proxySQL admin password from HashiCorp Vault
      set_fact:
        proxysql_creds: "{{ lookup('hashi_vault', 'secret=kv/data/percona_cluster/proxy_sql token={{ hashicorp_vault_token }} url={{ hashicorp.vault.address }}') }}"
      no_log: true

# NOTE: The following task is not working as expected because it tries to log into proxysql via a socket file that doesn't exist, we'll do it as a command instead in the next task.
#    - name: Change default proxysql admin password
#      mysql_user:
#        login_user: admin
#        login_password: admin
#        login_port: 6032
#        host: 127.0.0.1
#        user: admin
#        password: "{{ proxysql_creds.admin_password }}"

# https://www.digitalocean.com/community/tutorials/how-to-use-proxysql-as-a-load-balancer-for-mysql-on-ubuntu-16-04#:~:text=To%20set%20the%20administrator%20password%20in%20ProxySQL%2C%20we%E2%80%99ll,-p%20-h%20127.0.0.1%20-P%206032%20--prompt%3D%27%20ProxySQLAdmin%3E%20%27
    - name: Change default proxysql admin password
      ansible.builtin.command:
        cmd: mysql -u admin -e "UPDATE global_variables SET variable_value='admin:{{ proxysql_creds.admin_password }}' WHERE variable_name='admin-admin_credentials'; LOAD ADMIN VARIABLES TO RUNTIME; SAVE ADMIN VARIABLES TO DISK;"
      environment:
        MYSQL_PWD: admin
        MYSQL_HOST: 127.0.0.1
        MYSQL_TCP_PORT: 6032
      ignore_errors: yes # If default password is already changed, this will fail, but that's okay.

    - debug:
        msg: |
          Waiting for the user to bootstrap the cluster and start at least 1 other node to the cluster before setting up ProxySQL.
          To bootstrap the cluster, run the following command on the bootstrap node:
            "sudo service mysql bootstrap-pxc" or "sudo systemctl start mysql@bootstrap.service"
          To start the other nodes, run the following command on the other nodes:
            "sudo service mysql start" or "sudo systemctl start mysql"
          

    - name: Retrieve MySQL Root user password from HashiCorp Vault
      # NOTE: This password is created manually and stored in vault at path below. 36 characters generated by random.org
      set_fact:
        percona_creds: "{{ lookup('hashi_vault', 'secret=kv/data/percona_cluster/pxc-cluster token={{ hashicorp_vault_token }} url={{ hashicorp.vault.address }}') }}"
      no_log: true

    - name: Wait for Percona XtraDB Cluster to be ready
      block:
        - name: Query cluster size
          mysql_query:
            login_host: "{{ groups['PerconaCluster'][0] }}" # This should be the bootstrap node
            login_user: root
            login_password: "{{ percona_creds.root_password }}"
            query: "SHOW STATUS LIKE 'wsrep_cluster_size';"
          register: cluster_status
          until: cluster_status.query_result[0][0].Value | int > 1
          retries: 120 # 120 retries * 5 seconds = 10 minutes to timeout
          delay: 5
          ignore_errors: yes # The DB may not be ready to query yet.

    - name: Add cluster nodes to ProxySQL
      ansible.builtin.command:
        cmd: >
          mysql -u admin -e "INSERT INTO mysql_servers(hostgroup_id, hostname, port) VALUES (0,'{{ item }}',3306);"
      environment:
        MYSQL_PWD: "{{ proxysql_creds.admin_password }}"
        MYSQL_HOST: 127.0.0.1
        MYSQL_TCP_PORT: 6032
      loop: "{{ groups['PerconaCluster'] }}"
      ignore_errors: yes # If the nodes are already added, this will fail due to a UUID constraint, but that's okay for now.

    - name: Retrieve ProxySQL creds from HashiCorp Vault
      # NOTE: This password is created manually and stored in vault at path below. 36 characters generated by random.org
      set_fact:
        proxysql_creds: "{{ lookup('hashi_vault', 'secret=kv/data/percona_cluster/proxy_sql token={{ hashicorp_vault_token }} url={{ hashicorp.vault.address }}') }}"
      no_log: true

    - name: Create ProxySQL Monitoring User in the Percona XtraDB Cluster
      mysql_user:
        login_user: root
        login_password: "{{ percona_creds.root_password }}"
        login_host: "{{ groups['PerconaCluster'][0] }}" # This should be the bootstrap node
        name: "{{ proxysql.monitor_username }}"
        host: '%'
        password: "{{ proxysql_creds.proxysql }}"
        priv: "*.*:USAGE"
        state: present

    - name: Set proxysql variable for mysql-monitor_username
      ansible.builtin.command:
        cmd: >
          mysql -u admin -e "UPDATE global_variables SET variable_value='{{ proxysql.monitor_username }}' WHERE variable_name='mysql-monitor_username';"
      environment:
        MYSQL_PWD: "{{ proxysql_creds.admin_password }}"
        MYSQL_HOST: 127.0.0.1
        MYSQL_TCP_PORT: 6032

    - name: Set proxysql variable for mysql-monitor_password
      ansible.builtin.command:
        cmd: >
          mysql -u admin -e "UPDATE global_variables SET variable_value='{{ proxysql_creds.proxysql }}' WHERE variable_name='mysql-monitor_password';"
      environment:
        MYSQL_PWD: "{{ proxysql_creds.admin_password }}"
        MYSQL_HOST: 127.0.0.1
        MYSQL_TCP_PORT: 6032

    - name: Create ProxySQL Client User
      ansible.builtin.command:
        cmd: >
          mysql -u admin -e "INSERT INTO mysql_users (username,password) VALUES ('{{ proxysql.client_username }}','{{ proxysql_creds.sbuser }}');"
      environment:
        MYSQL_PWD: "{{ proxysql_creds.admin_password }}"
        MYSQL_HOST: 127.0.0.1
        MYSQL_TCP_PORT: 6032
      ignore_errors: yes # If the user already exists, this will fail, but that's okay.

    - name: Provide client user with read write access to the cluster for ProxySQL
      mysql_user:
        login_user: root
        login_password: "{{ percona_creds.root_password }}"
        login_host: "{{ groups['PerconaCluster'][0] }}" # This should be the bootstrap node
        name: "{{ proxysql.client_username }}"
        host: '%'
        password: "{{ proxysql_creds.sbuser }}"
        priv: "*.*:ALL"
        state: present

    - name: Load users into runtime space
      ansible.builtin.command:
        cmd: >
          mysql -u admin -e "LOAD MYSQL USERS TO RUNTIME; SAVE MYSQL USERS TO DISK;"
      environment:
        MYSQL_PWD: "{{ proxysql_creds.admin_password }}"
        MYSQL_HOST: 127.0.0.1
        MYSQL_TCP_PORT: 6032