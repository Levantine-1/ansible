---
- name: Configure Splunk Server
  hosts: Splunk
  gather_facts: true
  become: true

  vars_files:
    - ../../../vault.yml
  vars:
    default_region: "{{ aws.default_region }}"
    splunk_server_installer_file: "splunk-9.2.1-78803f08aabb-linux-2.6-amd64.deb"

  tasks:
    - name: Install required system packages
      apt:
        pkg:
          - python3-pip
          - virtualenv
          - python3-boto3
          - python3-botocore
        state: latest
        update_cache: true

    - name: Check if Splunk is installed
      stat:
        path: /opt/splunk/bin/splunk
      register: splunk_executable

    - name: Retrieve AWS Credentials from HashiCorp Vault
      # NOTE: The secret path is created in the main terraform repo when the user is created and key stored in vault at path below
      set_fact:
        aws_creds: "{{ lookup('hashi_vault', 'secret=kv/data/aws/iam_access_keys/terraform_admin token={{ hashicorp_vault_token }} url={{ hashicorp.vault.address }}') }}"

    - name: Download splunkserver.deb from S3
      aws_s3:
        bucket: "{{ env_context }}-levantine-terraform-bucket"
        object: "splunk/{{ splunk_server_installer_file }}"
        dest: "~/{{ splunk_server_installer_file }}"
        mode: get
        aws_access_key: "{{ aws_creds.access_key }}"
        aws_secret_key: "{{ aws_creds.secret_key }}"
        region: "{{ aws.default_region }}"
      when: splunk_executable.stat.exists == False
      register: splunk_download

    - name: Install splunkserver.deb
      ansible.builtin.apt:
        deb: "~/{{ splunk_server_installer_file }}"
      when: splunk_download.changed
      register: splunk_install

    - name: Delete splunkserver.deb
      ansible.builtin.file:
        path: "~/{{ splunk_server_installer_file }}"
        state: absent

    - name: Retrieve default Splunk Login Password from HashiCorp Vault
      set_fact:
        splunk_creds: "{{ lookup('hashi_vault', 'secret=kv/data/splunk/server token={{ hashicorp_vault_token }} url={{ hashicorp.vault.address }}') }}"
      when: splunk_install.changed

    - name: Create username and password in user-seed.conf
      copy:
        dest: "/opt/splunk/etc/system/local/user-seed.conf"
        content: |
          [user_info]
          USERNAME = "{{ splunk_creds.USERNAME }}"
          HASHED_PASSWORD  = "{{ splunk_creds.PASSWORD_HASH }}"
      when: splunk_install.changed

#    - name: Enable Splunk systemd boot-start
#      ansible.builtin.command:
#        cmd: "/opt/splunk/bin/splunk enable boot-start -user root -systemd-managed 1 --accept-license --answer-yes --no-prompt"
#      when: splunk_install.changed
#
#    - name: Restart Splunk
#      ansible.builtin.command:
#        cmd: "/opt/splunk/bin/splunk restart"
#      when: splunk_install.changed

# NOTE: For some weird reason, the splunk server doesn't provision the admin user with the correct password as specified
# in the user-seed.conf file despite EXPLICITLY requesting the file and the file is created with the exact fields it wants,
# and when starting the splunk server, it does not complain. I don't know why, I can't figure it out. So once the splunk server is installed,
# Run the following steps manually on the splunk server host:

# 1. sudo /opt/splunk/bin/splunk start --accept-license --answer-yes
     # Configure the initial username and password here.

# 2. sudo /opt/splunk/bin/splunk stop
     # We stop splunk here to enable and start it as a systemd service

# 3. sudo /opt/splunk/bin/splunk enable boot-start -user root -systemd-managed 1
     # This command will enable splunk to start on boot as a systemd service

# 4. sudo service Splunkd start