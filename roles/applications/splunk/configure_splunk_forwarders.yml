---
- name: Configure Splunk Forwarders
  hosts: all:!Splunk:!Theia:!Jenkins
  # Excluding Theia and Jenkins because they're legacy envs and I don't want to deal with potential conflicts
  gather_facts: true
  become: true

  vars_files:
    - ../../../vault.yml
  vars:
    default_region: "{{ aws.default_region }}"
    splunk_forwarder_installer_file: "splunkforwarder-9.2.1-78803f08aabb-linux-2.6-amd64.deb"

  tasks:
    - name: Install required system packages
      apt:
        pkg:
          - python3-pip
          - virtualenv
          - python3-boto3
          - python3-botocore
        state: latest
        update_cache: true

    - name: Check if Splunk Forwarder is currently installed
      ansible.builtin.command: /opt/splunkforwarder/bin/splunk -version | grep -v 'Warning'
      register: splunk_forwarder_version
      ignore_errors: yes

    - name: Retrieve AWS Credentials from HashiCorp Vault
      # NOTE: The secret path is created in the main terraform repo when the user is created and key stored in vault at path below
      set_fact:
        aws_creds: "{{ lookup('hashi_vault', 'secret=kv/data/aws/iam_access_keys/terraform_admin token={{ hashicorp_vault_token }} url={{ hashicorp.vault.address }}') }}"

    - name: Download splunkforwarder.deb from S3
      aws_s3:
        bucket: "{{ env_context }}-levantine-terraform-bucket"
        object: "splunk/{{ splunk_forwarder_installer_file }}"
        dest: "~/{{ splunk_forwarder_installer_file }}"
        mode: get
        aws_access_key: "{{ aws_creds.access_key }}"
        aws_secret_key: "{{ aws_creds.secret_key }}"
        region: "{{ aws.default_region }}"
      when: splunk_forwarder_version.rc != 0
      register: splunk_download

    - name: Install splunk forwarder
      ansible.builtin.apt:
        deb: "~/{{ splunk_forwarder_installer_file }}"
      when: splunk_download.changed
      register: splunk_install

    - name: Delete splunkforwarder.deb
      ansible.builtin.file:
        path: "~/{{ splunk_forwarder_installer_file }}"
        state: absent

    #NOTE: I know this is the server login, but to keep things simple for now, I'm using the same credentials for the forwarders as well
    - name: Retrieve default Splunk Login Password from HashiCorp Vault
      set_fact:
        splunk_creds: "{{ lookup('hashi_vault', 'secret=kv/data/splunk/server token={{ hashicorp_vault_token }} url={{ hashicorp.vault.address }}') }}"
      when: splunk_install.changed

    # NOTE: DO NOT use quotes around the splunk_creds variables. Splunk will not provision the user correctly.
    # https://docs.splunk.com/Documentation/Splunk/9.2.1/Admin/User-seedconf
    - name: Create username and password in user-seed.conf
      copy:
        dest: "/opt/splunkforwarder/etc/system/local/user-seed.conf"
        content: |
          [user_info]
          USERNAME = {{ splunk_creds.USERNAME }}
          HASHED_PASSWORD  = {{ splunk_creds.PASSWORD_HASH }}
        # Use HASHED_PASSWORD for a more secure installation. To hash a clear-text password,
        # use the 'splunk hash-passwd' command then copy the output to this file.
      when: splunk_install.changed

    - name: Enable Splunk systemd boot-start
      ansible.builtin.command:
        cmd: "/opt/splunkforwarder/bin/splunk enable boot-start -user root -systemd-managed 1 --accept-license --answer-yes --no-prompt"
      when: splunk_install.changed

    - name: Enable Splunk systemd boot-start
      ansible.builtin.command:
        cmd: "/opt/splunkforwarder/bin/splunk enable boot-start -user root -systemd-managed 1 --accept-license --answer-yes --no-prompt"
      when: splunk_install.changed
      ignore_errors: yes
      # OK, so this is weird, this command oddly needs to be run twice. If run once, even as sudo, it fails with a permission error.
      # but when you run the exact command twice, you get this message "Overwriting present value (splunkfwd) of 'SPLUNK_OS_USER' in /opt/splunkforwarder/etc/splunk-launch.conf"
      # and then it works. I have no idea why, but it works after restarting the service daemon.

    - name: Configure forwarders log file inputs file
      template:
        src: "templates/forwarders/monitor_inputs.conf.j2"
        dest: "/opt/splunkforwarder/etc/system/local/inputs.conf"
        owner: root
        group: root
        mode: '0644'
      register: inputs_config

    - name: Configure forwarders outputs file
      template:
        src: "templates/forwarders/outputs.conf.j2"
        dest: "/opt/splunkforwarder/etc/system/local/outputs.conf"
        owner: root
        group: root
        mode: '0644'
      register: outputs_config

    - name: Restart Splunkd service
      ansible.builtin.service:
        name: SplunkForwarder
        state: restarted
      when: splunk_install.changed or inputs_config.changed or outputs_config.changed